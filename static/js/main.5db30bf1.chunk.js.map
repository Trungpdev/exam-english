{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["URL","fetchData","a","fetch","then","res","json","App","useState","openExam","setOpenExam","data","setData","name","setName","isSubmit","setIsSubmit","falseCount","setFalseCount","openCopyPenalty","setOpenCopyPenalty","loading","setLoading","falseData","setFalseData","finalCopyPenalty","setFinalCopyPenalty","useEffect","mapping","feed","entry","map","i","gs$cell","forEach","row","index","value","copy","correct","ok","col","q","trim","toLowerCase","changeValue","elm","clone","target","changeCopyPenalty","preventPaste","preventDefault","className","style","display","justifyContent","height","alignSelf","class","id","marginLeft","type","onChange","length","color","border","item","rows","onPaste","bind","width","padding","textAlign","disabled","Fragment","onClick","some","string","subString","allowOverlapping","n","pos","step","indexOf","occurrences","window","alert","valueNullCount","confirm","falseDataTemp","filter","mywindow","open","document","write","getElementById","innerHTML","close","focus","print","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5db30bf1.chunk.js","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\n\n\nconst SHEET_KEY = '1pMkhEnCmNodO3dGAG6bJ9GdVNnmtSCcZEvhFEqQIY1M';\nconst URL = `https://spreadsheets.google.com/feeds/cells/${SHEET_KEY}/1/public/full?alt=json`;\nconst fetchData = async () => {\n  return await fetch(URL).then(res => {\n    return res.json();\n  })\n}\n\n\nfunction App() {\n  const [openExam, setOpenExam] = useState(false);\n  const [data, setData] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [isSubmit, setIsSubmit] = useState(false);\n  const [falseCount, setFalseCount] = useState(0);\n  const [openCopyPenalty, setOpenCopyPenalty] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [falseData, setFalseData] = useState([]);\n  const [finalCopyPenalty, setFinalCopyPenalty] = useState(false);\n\n  useEffect(() => {\n\n    fetchData().then(res => {\n      const mapping = [];\n\n      const entry = res.feed.entry.map(i => i.gs$cell);\n\n      entry.forEach(i => {\n        if (i.row > 1) {\n          const index = i.row - 2;\n          if (!mapping[index]) mapping[index] = { value: \"\", copy: \"\", correct: true, ok: false };\n\n          switch (i.col) {\n            case '1': mapping[index].q = i['$t'].trim(); break;\n            case '2': mapping[index].a = i['$t'].trim(); break;\n            default: break;\n          }\n        }\n        else {\n          if (i.col === '5') setOpenExam(i['$t'].trim().toLowerCase() === 'on' ? true : false);\n        }\n      })\n      setData(mapping);\n      setLoading(false);\n\n    })\n\n  }, [])\n\n  const changeValue = (index, elm) => {\n    const clone = [...data];\n    clone[index].value = elm.target.value;\n    setData(clone);\n  }\n\n  const onSubmit = () => {\n    if (!name) {\n      window.alert(\"Bạn chưa nhập họ tên!\");\n      return;\n    }\n\n    let alert = \"Bạn chắc chắn muốn nộp bài?\";\n    let valueNullCount = 0;\n    data.forEach(item => {\n      if (item.value === \"\") valueNullCount++;\n    })\n    if (valueNullCount > 0) alert = `${alert} Bạn còn ${valueNullCount} câu chưa trả lời!`;\n\n    if (window.confirm(alert)) {\n      let clone = [...data];\n      let falseDataTemp = [];\n      falseDataTemp = data.filter((item, index) => {\n        if (item.value.trim().toLowerCase() !== item.a.toLowerCase()) {\n          clone[index].correct = false;\n          return true;\n        }\n        return false;\n      })\n\n      setData(clone);\n      setFalseData(falseDataTemp);\n      setFalseCount(falseDataTemp.length);\n      setIsSubmit(true);\n    }\n  }\n\n  const toggleCopyPenalty = () => {\n    setOpenCopyPenalty(!openCopyPenalty);\n  }\n\n  const changeName = (elm) => {\n    setName(elm.target.value);\n  }\n\n  const printResult = () => {\n    var mywindow = window.open('', 'PRINT');\n\n    mywindow.document.write('<html><head><title>EXAM RESULT</title>');\n    mywindow.document.write('</head><body >');\n    // mywindow.document.write('<h1>' + document.title + '</h1>');\n    mywindow.document.write(document.getElementById('printable').innerHTML);\n    mywindow.document.write('</body></html>');\n\n    mywindow.document.close(); // necessary for IE >= 10\n    mywindow.focus(); // necessary for IE >= 10*/\n\n    mywindow.print();\n    mywindow.close();\n\n    return true;\n  }\n\n  const changeCopyPenalty = (index, elm) => {\n    const clone = [...falseData];\n    clone[index].copy = elm.target.value;\n    setFalseData(clone);\n  }\n\n  const onSubmitCopyPenalty = () => {\n    const finalCopyPenaltyTemp = falseData.some(item => {\n      const amount = occurrences(item.copy, item.a);\n      if (amount < 10) return true;\n      return false;\n    })\n\n    if (finalCopyPenaltyTemp) {\n      window.alert(\"Yêu cầu mỗi từ sai phải chép lại 10 lần!\");\n    } else {\n      setFinalCopyPenalty(true);\n      setOpenCopyPenalty(false);\n    }\n  }\n\n  const preventPaste = (elm) => {\n    elm.preventDefault();\n  }\n\n  if (loading) {\n    return (\n      <div className=\"App\">\n        <div style={{display: 'flex',justifyContent: 'center', height: '80vh'}}>\n        <div style={{alignSelf: 'center'}} class=\"loader\"></div>\n        </div>\n      </div>\n    )\n  }\n\n  if (!openExam) {\n    return (\n      <div className=\"App\">\n        <h1>Bài thi chưa được mở!</h1>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <h2>ENGLISH EXAM</h2>\n\n      <div id=\"printable\">\n\n        <div>\n          <div><b>Họ tên:</b>\n            {isSubmit\n              ?\n              <span style={{ marginLeft: '5px' }}><b>{name}</b></span>\n              :\n              <input className=\"input-name\" type=\"text\" value={name} onChange={changeName} />\n            }\n          </div>\n          <div>\n            {isSubmit &&\n              <span><b>Kết quả: {data.length - falseCount}/{data.length}</b></span>\n            }\n          </div>\n        </div>\n        {(isSubmit && falseCount > 0)\n          &&\n          <div>\n            {finalCopyPenalty\n              ? <span style={{ color: 'green' }}><b>Đã chép phạt</b></span>\n              : <span style={{ color: 'red' }}><b>Chưa chép phạt</b></span>\n            }\n          </div>\n        }\n        <br />\n\n        <div className=\"container-table\">\n          {!openCopyPenalty\n            ?\n            <table width=\"100%\">\n              <thead>\n                <tr>\n                  <th style={{ padding: '10px' }}>#</th>\n                  <th style={{ padding: '10px' }}>Question</th>\n                  <th style={{ padding: '10px' }}>Your Answer</th>\n                  {isSubmit && <th style={{ padding: '10px' }}>Correct Answer</th>}\n                </tr>\n              </thead>\n              <tbody>\n                {data.map((item, index) =>\n                  <tr key={index}>\n                    <td style={{ textAlign: 'center' }}>{index + 1}</td>\n                    <td style={{ textAlign: 'center' }}>\n                      {item.q}\n                    </td>\n\n                    <td>\n                      <input type=\"text\"\n                        style={{ width: '100%', textAlign: 'center', color: (isSubmit && !item.correct) ? 'red' : 'black'}}\n                        value={item.value}\n                        disabled={isSubmit}\n                        onChange={changeValue.bind(this, index)}\n                      />\n                    </td>\n                    {isSubmit &&\n                      <td style={{ textAlign: 'center' }}>\n                        {item.a}\n                      </td>\n                    }\n                  </tr>\n                )}\n              </tbody>\n            </table>\n            :\n            <table border=\"1\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Question</th>\n                  <th>Copy penalty 10 times</th>\n                  <th>Correct Answer</th>\n                </tr>\n              </thead>\n              <tbody>\n                {falseData.map((item, index) =>\n                  <tr key={index}>\n                    <td>{index + 1}</td>\n                    <td>\n                      {item.q}\n                    </td>\n\n                    <td>\n                      <textarea type=\"text\"\n                        rows={5}\n                        onPaste={preventPaste}\n                        value={item.copy}\n                        onChange={changeCopyPenalty.bind(this, index)}\n                      />\n                    </td>\n\n                    <td>\n                      {isSubmit && item.a}\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          }\n        </div>\n      </div>\n\n      {openCopyPenalty\n        ?\n        <React.Fragment>\n          <button className=\"green\" onClick={onSubmitCopyPenalty}>Hoàn tất chép phạt</button>\n          <button className=\"red\" onClick={() => { setOpenCopyPenalty(false) }}>Hủy</button>\n        </React.Fragment>\n        :\n        <React.Fragment>\n          {!isSubmit\n            &&\n            <button onClick={onSubmit} className=\"green\">Nộp bài</button>\n          }\n          {(falseCount > 0 && !finalCopyPenalty)\n            &&\n            <button className=\"red\" onClick={toggleCopyPenalty}>Bạn có {falseCount} từ phải chép phạt</button>\n          }\n          {isSubmit\n            &&\n            <button className=\"blue\" onClick={printResult}>In kết quả</button>\n          }\n        </React.Fragment>\n      }\n\n    </div>\n  );\n}\n\nfunction occurrences(string, subString, allowOverlapping) {\n\n  string += \"\";\n  subString += \"\";\n  if (subString.length <= 0) return (string.length + 1);\n\n  var n = 0,\n    pos = 0,\n    step = allowOverlapping ? 1 : subString.length;\n\n  while (true) {\n    pos = string.indexOf(subString, pos);\n    if (pos >= 0) {\n      ++n;\n      pos += step;\n    } else break;\n  }\n  return n;\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}