{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["URL","fetchData","a","fetch","then","res","json","App","useState","data","setData","isSubmit","setIsSubmit","useEffect","console","log","mapping","entry","feed","map","i","gs$cell","forEach","row","index","value","col","q","changeValue","elm","target","clone","className","border","item","type","onChange","bind","onClick","alert","valueNullCount","window","confirm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAMMA,EAAG,sDADS,+CACT,2BACHC,EAAS,uCAAG,sBAAAC,EAAA,sEACHC,MAAMH,GAAKI,MAAK,SAAAC,GAC3B,OAAOA,EAAIC,UAFG,mFAAH,qDAoGAC,MA7Ff,WAAgB,IAAD,OACb,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WAERZ,IAAYG,MAAK,SAAAC,GACfS,QAAQC,IAAI,KAAMV,GAClB,IAAMW,EAAU,GAEVC,EAAQZ,EAAIa,KAAKD,MAAME,KAAI,SAAAC,GAAC,OAAIA,EAAEC,WACxCP,QAAQC,IAAI,QAASE,GAErBA,EAAMK,SAAQ,SAAAF,GACZ,GAAIA,EAAEG,IAAM,EAAG,CACb,IAAMC,EAAQJ,EAAEG,IAAM,EAGtB,OAFKP,EAAQQ,KAAQR,EAAQQ,GAAS,CAAEC,MAAO,KAEvCL,EAAEM,KACR,IAAK,IAAKV,EAAQQ,GAAOG,EAAIP,EAAC,GAAQ,MACtC,IAAK,IAAKJ,EAAQQ,GAAOtB,EAAIkB,EAAC,QAKpCV,EAAQM,GAERF,QAAQC,IAAI,WAAYC,QAGzB,IAEH,IAAMY,EAAc,SAACJ,EAAOK,GAC1Bf,QAAQC,IAAI,QAASS,EAAOK,EAAIC,OAAOL,OACvC,IAAMM,EAAK,YAAOtB,GAClBsB,EAAMP,GAAOC,MAAQI,EAAIC,OAAOL,MAChCf,EAAQqB,IAgBV,OACE,sBAAKC,UAAU,MAAf,UACE,8CAEA,qBAAKA,UAAU,kBAAf,SACE,wBAAOC,OAAO,IAAd,UACE,gCACE,+BACE,mCACA,0CACA,6CACA,qDAGJ,gCACGxB,EAAKU,KAAI,SAACe,EAAMV,GAAP,OACR,+BACE,6BAAKA,EAAQ,IACb,6BACGU,EAAKP,IAGR,6BACE,uBAAOQ,KAAK,OAAOV,MAAOS,EAAKT,MAAOW,SAAUR,EAAYS,KAAK,EAAMb,OAGzE,6BACGb,GAAYuB,EAAKhC,MAXbsB,aAkBjB,wBAAQc,QA/CK,WACf,IAAIC,EAAQ,0DACRC,EAAiB,EACrB/B,EAAKa,SAAQ,SAAAY,GACQ,KAAfA,EAAKT,OAAce,OAErBA,EAAiB,IAAGD,EAAK,UAAMA,EAAN,4BAAuBC,EAAvB,yCAEzBC,OAAOC,QAAQH,IACjB3B,GAAY,IAsCZ,iCCxFS+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2f606d79.chunk.js","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\n\n\nconst SHEET_KEY = '1pMkhEnCmNodO3dGAG6bJ9GdVNnmtSCcZEvhFEqQIY1M';\nconst URL = `https://spreadsheets.google.com/feeds/cells/${SHEET_KEY}/1/public/full?alt=json`;\nconst fetchData = async () => {\n  return await fetch(URL).then(res => {\n    return res.json();\n  })\n}\n\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  useEffect(() => {\n\n    fetchData().then(res => {\n      console.log(\"rs\", res)\n      const mapping = [];\n\n      const entry = res.feed.entry.map(i => i.gs$cell);\n      console.log('entry', entry)\n\n      entry.forEach(i => {\n        if (i.row > 1) {\n          const index = i.row - 2;\n          if (!mapping[index]) mapping[index] = { value: \"\" };\n\n          switch (i.col) {\n            case '1': mapping[index].q = i['$t']; break;\n            case '2': mapping[index].a = i['$t']; break;\n            default: break;\n          }\n        }\n      })\n      setData(mapping);\n\n      console.log(\"mapping:\", mapping)\n    })\n\n  }, [])\n\n  const changeValue = (index, elm) => {\n    console.log(\"index\", index, elm.target.value)\n    const clone = [...data];\n    clone[index].value = elm.target.value;\n    setData(clone);\n  }\n\n  const onSubmit = () => {\n    let alert = \"Bạn chắc chắn muốn nộp bài?\";\n    let valueNullCount = 0;\n    data.forEach(item => {\n      if (item.value === \"\") valueNullCount++;\n    })\n    if (valueNullCount > 0) alert = `${alert} Bạn còn ${valueNullCount} câu chưa trả lời!`;\n\n    if (window.confirm(alert)) {\n      setIsSubmit(true);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>ENGLISH EXAM</h1>\n\n      <div className=\"container-table\">\n        <table border=\"1\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Question</th>\n              <th>Your Answer</th>\n              <th>Correct Answer</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.map((item, index) =>\n              <tr key={index}>\n                <td>{index + 1}</td>\n                <td>\n                  {item.q}\n                </td>\n\n                <td>\n                  <input type=\"text\" value={item.value} onChange={changeValue.bind(this, index)} />\n                </td>\n\n                <td>\n                  {isSubmit && item.a}\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n      <button onClick={onSubmit}>Nộp bài</button>\n\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n// const data = [];\n\n// fetchData().then(res =>{\n//     console.log(\"data\", res)\n//     const entry = res.feed.entry.map(i => i.gs$cell);\n//     console.log('entry', entry)\n\n//     entry.forEach(i =>{\n//         if(i.row > 1){\n//             const index = i.row - 2;\n//             if(!data[index]) data[index] = {};\n\n//             switch(i.col){\n//                 case '1': data[index].q = i['$t']; break;\n//                 case '2': data[index].a = i['$t']; break;\n//                 default: break;\n//             }\n//         }\n//     })\n\n//     console.log(\"mapping:\", data)\n//     const a = \"test\";\n\n//     var bodyTable = document.getElementById('body-table');\n//     bodyTable.innerHTML = `<tr><td>kkkkkkkk</td></tr>`\n//     console.log(\"bodyTable\", bodyTable)\n// })\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}